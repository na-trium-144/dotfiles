name: Build docker image

on:
  push:
    branches: ["main", "docker"]

env:
  cache_base: ghcr.io/na-trium-144/dotfiles/cache
  user: kou


jobs:
  build-source:
    # The host should always be linux
    runs-on: ${{matrix.runner}}
    name: Build ${{matrix.stage}} (${{ matrix.arch }})

    # Run steps on a matrix of 4 arch/distro combinations
    strategy:
      matrix:
        arch: [amd64, arm64]
        stage: [cargo, doxygen, jsontui]
        include:
          - arch: amd64
            runner: ubuntu-22.04
          - arch: arm64
            runner: ubuntu-22.04-arm
          # - arch: armhf
          #   base: '--platform=linux/arm/v7 arm32v7/ubuntu'
    steps:
      - uses: actions/checkout@v4
      - name: Cache artifacts
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/docker/artifacts
          key: ${{matrix.arch}}-${{matrix.stage}}-${{hashFiles('**/build-docker.yml', '**/cargo.sh', '**/doxygen.sh', '**/json-tui.sh')}}
      - name: Build cargo packages
        if: matrix.stage == 'cargo' && steps.cache.outputs.cache-hit != 'true'
        uses: addnab/docker-run-action@v3
        with:
          image: ubuntu:20.04
          options: >
            -v ${{ github.workspace }}:/workspace
            -e _chezmoi_root=/workspace
          run: |
            set -e
            cd /workspace
            apt-get update
            apt-get install -y curl build-essential
            ./utils/cargo.sh
            mkdir -p ./docker/artifacts/.cargo/bin
            for f in delta fd hexyl; do
              mv $HOME/.cargo/bin/$f ./docker/artifacts/.cargo/bin/
            done
      - name: Build doxygen
        if: matrix.stage == 'doxygen' && steps.cache.outputs.cache-hit != 'true'
        uses: addnab/docker-run-action@v3
        with:
          image: ubuntu:20.04
          options: >
            -v ${{ github.workspace }}:/workspace
            -e _chezmoi_root=/workspace
            -e DEBIAN_FRONTEND=noninteractive
          run: |
            set -e
            cd /workspace
            apt-get update
            ./utils/source_builds/doxygen.sh
            mkdir -p ./docker/artifacts/.local/bin
            mv $HOME/.local/bin/doxygen ./docker/artifacts/.local/bin/
      - name: Build json-tui
        if: matrix.stage == 'jsontui' && steps.cache.outputs.cache-hit != 'true'
        uses: addnab/docker-run-action@v3
        with:
          image: ubuntu:20.04
          options: >
            -v ${{ github.workspace }}:/workspace
            -e _chezmoi_root=/workspace
            -e DEBIAN_FRONTEND=noninteractive
          run: |
            set -e
            cd /workspace
            apt-get update
            ./utils/source_builds/json-tui.sh
            mkdir -p ./docker/artifacts/.local/bin
            mv $HOME/.local/bin/json-tui ./docker/artifacts/.local/bin/
      - uses: actions/upload-artifact@v4
        with:
          name: build-${{matrix.arch}}-${{matrix.stage}}
          include-hidden-files: true
          path: |
            ${{github.workspace}}/docker/artifacts/

  build:
    strategy:
      matrix:
        arch: [amd64, arm64]
        stage: [base_ubuntu20, base_ubuntu22, base_ubuntu24, base_arch, base_brew, base_nix]
        include:
          - arch: amd64
            arch_img: archlinux
            runner: ubuntu-22.04
          - arch: arm64
            arch_img: lopsided/archlinux-arm64v8
            runner: ubuntu-22.04-arm
        exclude:
          - arch: arm64
            stage: base_brew

    runs-on: ${{matrix.runner}}
    name: Build
    needs: [build-source]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: build-${{matrix.arch}}-cargo
          path: ${{github.workspace}}/docker/artifacts
      - uses: actions/download-artifact@v4
        with:
          name: build-${{matrix.arch}}-doxygen
          path: ${{github.workspace}}/docker/artifacts
      - uses: actions/download-artifact@v4
        with:
          name: build-${{matrix.arch}}-jsontui
          path: ${{github.workspace}}/docker/artifacts

      # https://stackoverflow.com/questions/58033366/how-to-get-the-current-branch-within-github-actions
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ vars.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: docker
          build-args: |
            BASE_USER=${{ env.user }}
            ARCH_IMG=${{ matrix.arch_img }}
            CHEZMOI_BRANCH=${{ steps.extract_branch.outputs.branch }}
          platforms: linux/${{ matrix.arch }}
          push: true
          target: ${{matrix.stage}}
          cache-from: type=registry,ref=ghcr.io/na-trium-144/dotfiles/${{matrix.stage}}:${{matrix.arch}}-cache
          cache-to: type=registry,ref=ghcr.io/na-trium-144/dotfiles/${{matrix.stage}}:${{matrix.arch}}-cache,mode=max
          tags: |
            ghcr.io/na-trium-144/dotfiles/${{matrix.stage}}:${{matrix.arch}}

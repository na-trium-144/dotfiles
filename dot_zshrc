export PATH="/opt/homebrew/bin:$PATH"
alias ibrew="arch -x86_64 /usr/local/bin/brew"
alias ipip3="arch -x86_64 /usr/local/bin/pip3"
alias ipython3="arch -x86_64 /usr/local/bin/python3"

export PATH="/opt/homebrew/opt/llvm/bin:$PATH"

export LANG=ja_JP.UTF-8

#eval "$(dircolors -b)"

autoload colors
colors

HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt hist_no_store
setopt appendhistory		     # HISTFILEを上書きせずに追記
setopt hist_ignore_all_dups         # 重複したとき、古い履歴を削除
setopt hist_ignore_space	     # 先頭にスペースを入れると履歴を保存しない
setopt hist_reduce_blanks           # 余分なスペースを削除して履歴を保存
setopt share_history		     # 履歴を共有する

# 補完
autoload -Uz compinit
compinit -u
## 補完候補を一覧表示
setopt auto_list
## TAB で順に補完候補を切り替える
setopt auto_menu
## 補完候補一覧でファイルの種別をマーク表示
setopt list_types
## カッコの対応などを自動的に補完
# setopt auto_param_keys
## ディレクトリ名の補完で末尾の / を自動的に付加し、次の補完に備える
# setopt auto_param_slash
## 補完候補のカーソル選択を有効に
zstyle ':completion:*:default' menu select=2
## 補完候補の色づけ
export ZLS_COLORS=$LS_COLORS
# zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
## 補完候補を詰めて表示
setopt list_packed
## スペルチェック
# setopt correct
## ファイル名の展開でディレクトリにマッチした場合末尾に / を付加する
# setopt mark_dirs
## 最後のスラッシュを自動的に削除しない
setopt noautoremoveslash
## 大文字と小文字を区別しない
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
## 出力の文字列末尾に改行コードが無い場合でも表示
unsetopt promptcr
## ビープを鳴らさない
# setopt nobeep
## cd 時に自動で push
# setopt auto_pushd
## 同じディレクトリを pushd しない
# setopt pushd_ignore_dups
## --prefix=/usr などの = 以降も補完
setopt magic_equal_subst
## ファイル名の展開で辞書順ではなく数値的にソート
setopt numeric_glob_sort
## 出力時8ビットを通す
setopt print_eight_bit
## ディレクトリ名だけで cd
# setopt auto_cd
## コマンドラインでも # 以降をコメントと見なす
setopt interactive_comments

autoload -Uz vcs_info
setopt prompt_subst
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' stagedstr '%F{magenta}'
zstyle ':vcs_info:git:*' unstagedstr '%F{yellow}+'
zstyle ':vcs_info:*' formats '%c%u[%b]'
zstyle ':vcs_info:*' actionformats '[%b|%a]'
precmd () { vcs_info }
# PROMPTの設定
#PROMPT="%{${fg[yellow]}%}(*\"･ェ･)/ %{${fg[cyan]}%}[%~]%{${reset_color}%} $%{${reset_color}%} "
#PROMPT2="%B%{${fg[yellow]}%}%_>%{${reset_color}%}%b "
SPROMPT="%B%{$fg[red]%}%{$suggest%}ヽ(#･ω･)ﾉ < もしかして%b %{${fg[green]}%}%r %B%{$fg[red]%}? [うん!(y), ちゃう(n),a,e]:${reset_color}%b "
# バージョン管理されているディレクトリにいれば表示，そうでなければ非表示
#RPROMPT="%1(v|%F{green}%1v%f|)"
## 入力が右端まで来たらRPROMPTを消す
#setopt transient_rprompt
#setopt prompt_subst

PROMPT='%B%{$fg[red]%}%m%b%{$reset_color%}:%B%{$fg[cyan]%}%~%b %{$fg[green]%}${vcs_info_msg_0_}%{$fg[yellow]%}･_･)φ_ %{$reset_color%}'

function precmd() {
    #psvar=()
    LANG=en_US.UTF-8 vcs_info
    #[[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}

alias ls='ls --color=auto -G'

function _window_title_cmd () {
  # local pwd="${PWD/~HOME/~}"
  print -n "\e]0;"
  # print -n "${pwd##*/} (${HOST%%.*})"
  print -n "${HOST%%.*} ･_･)φ_"
  print -n "\a"
}

# function _window_title_exec () {
  # local pwd="${PWD/~HOME/~}"
  # print -n "\e]0;"
  # print -n "${1%% *}:${pwd##*/} (${HOST%%.*})"
  # print -n "\a"
# }

[[ "$TERM" =~ "^xterm" ]] && {
  add-zsh-hook precmd _window_title_cmd
  # add-zsh-hook preexec _window_title_exec
}
